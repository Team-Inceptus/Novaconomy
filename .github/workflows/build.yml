name: Build Project

on:
  push:
    branches: [ master, ver/* ]
  pull_request:
    branches: [ master, ver/* ]

  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    name: Maven Setup
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Maven Setup
        run: mvn clean install -DskipTests
      - name: Maven Information
        run: mvn dependency:tree -Ddetail=true

  analyze:
    runs-on: ubuntu-latest
    needs: setup
    if: github.event_name != 'pull_request'
    timeout-minutes: 10

    name: Analyze Project
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Team-Inceptus_Novaconomy

  build:
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 10

    strategy:
      matrix:
        java-version: [8, 11]

    name: Build Java ${{ matrix.java-version }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}
          cache: 'maven'
      - name: Build with Maven
        run: |
          mvn clean package -pl "api,abstraction,plugin,nms/1_8_R1,nms/1_8_R2,nms/1_8_R3,nms/1_9_R1,nms/1_9_R2,nms/1_10_R1,nms/1_11_R1,nms/1_12_R1,nms/1_13_R1,nms/1_13_R2,nms/1_14_R1,nms/1_15_R1,nms/1_16_R1,nms/1_16_R2,nms/1_16_R3" -DskipTests -Dmaven.javadoc.skip=true
  build-16:
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 10

    name: Build Java 16
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '16'
          cache: 'maven'
      - name: Build with Maven
        run: |
          mvn clean package -pl "api,abstraction,plugin,nms/1_8_R1,nms/1_8_R2,nms/1_8_R3,nms/1_9_R1,nms/1_9_R2,nms/1_10_R1,nms/1_11_R1,nms/1_12_R1,nms/1_13_R1,nms/1_13_R2,nms/1_14_R1,nms/1_15_R1,nms/1_16_R1,nms/1_16_R2,nms/1_16_R3,nms/1_17_R1" -DskipTests -Dmaven.javadoc.skip=true

  build-17:
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 10

    strategy:
      matrix:
        java-version: [17, 18]

    name: Build Java ${{ matrix.java-version }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}
          cache: 'maven'
      - name: Build with Maven
        run: |
          mvn clean package -DskipTests -Dmaven.javadoc.skip=true

  deploy:
    runs-on: ubuntu-latest
    needs: setup
    name: Deploy JavaDocs
    if: ${{ github.event_name != 'pull_request' && github.ref_name == 'master' }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Build JavaDocs
        run: mvn package -pl "api" -DskipTests

      - name: Deploy JavaDoc
        run: bash javadoc.sh ${GITHUB_SHA::7}
